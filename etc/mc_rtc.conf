{
  // What robot is being controlled
  "MainRobot" : "HRP2DRC",

  "Enabled"   : ["Handover"],

  // Publish the state of the controlled robot (ROS)
  "PublishControlState" : true,

  // Publish the state of the real robot (ROS)
  "PublishRealState" : true,

  // Timestep of publication (ROS)
  "PublishTimestep" : 0.01,

  // Controller timestep
  "Timestep" : 0.005,

  // Set to true or false to enable/disable respectively
  "Log" : true,
  "LogPolicy" : "threaded",

  // LogDirectory dictates where the log files will be stored, defaults to system temp directory
  "LogDirectory" : "/tmp",

  // The log file will have the name [LogTemplate]-[ControllerName]-[date].log
  "LogTemplate" : "mc-control",

  "UseSandbox" : false,

  // When true and the FSM is self-managed, transitions should be triggered
  "StepByStep": false,

  // Where to look for state libraries
  "StatesLibraries": ["/usr/local/lib/mc_controller/handovercontroller/states",
    "/usr/local/lib/mc_controller/fsm/states"],

  // Where to look for state files
  "StatesFiles": [],

  "GUIServer" :
  {

    // If true, enable the GUI server, otherwise or if absent, disable this
    // feature
    "Enable" : true,

    // Publication timestep, actual rate is rounded up depending on the
    // controller timestep
    "Timestep": 0.05,

    // IPC (inter-process communication) section, if the section is absent
    // this disables the protocol, if the section is empty it is configured
    // to its default settings.
    "IPC" :
    {

      // If the GUI server IPC protocol is enabled, this is used as a base
      // to create the sockets, the actual sockets name will be formed by
      // adding _sub.ipc and _rep.ipc to the provided path. The file will
      // be created if required
      "GUIServerTCPHost" : "/tmp/mc_rtc",
    },

    // TCP section, the same remarks apply as IPC
    "TCP" :
    {
      // Binding host, * binds to all interfaces
      "Host": "*",

      // Binding ports, the first is used for PUB socket and the second for
      // the PULL socket
      "Ports": [4242, 4343]
    },

    // WS (websocket) section, the same remarks apply as IPC
    //"WS" :
    //{
    //  // Binding host, * binds to all interfaces
    //  "Host": "*",

    //  // Binding ports, the first is used for PUB socket and the second for
    //  // the PULL socket
    //  "Ports": [8080, 8081]
    //}
  },
}
